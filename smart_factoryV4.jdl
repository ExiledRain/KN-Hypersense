/**
* Factory entity that represents current factory.
* @author Vassili Moskaljov
* @version 1.0
*/
entity Factory {
	name String
    description String
    location String
    type String
}

/**
* Representation of the specific group of users defined by organization.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity BusinessUnit {
	name String
    description String
}

/**
* Enity of specific production line.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity ProductionLine {
	name String
    description String
}

/**
* Entity that groups up Production lines.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity ProductionLineGroup {
	name String
    description String
}

/**
* Entity that holds up defined metrics.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity Metric {
	thingUuid String
}

/**
* Set of specific metrics that measure activities.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity MetricData {
	timeStamp Instant
    measureValue String
    name String
}

/**
* Entity that holds collection of related users.
* @author Vassili Moskaljov
* @version 1.0
*/
entity CompanyUser {
	usersUuid String
}

/**
* Entity that holds user profile data
* @author Vassili Moskaljov.
* @version 1.0
*/
entity UserProfile {
	address String
    city String
    country String
    postalCode String
}

/**
* Entity that hold location specific to Production line.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity LocationData {
	floor String
    room String
    additionalInfo String
}

/**
* Entity that hold collection of related Things from Core platform.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity Things {
	thingUuid String
}

/**
* Entity that holds current states of the Production line.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity State {
	name String
    description String
}

/**
* Entity to define status for Metric Data
* @author Vassili Moskaljov.
* @version 1.0
*/
entity Status {
	name String
    description String
}

/**
* Entity of the product that being produced.
* @author Vassili Moskaljov.
* @version 1.0
*/
entity ProductData {
	name String
    scrapedQty Integer
    pendingQty Integer
    rejectedQty Integer
    completedQty Integer
}

entity ProductionPlan {
	dueDate Instant
    qty Integer
    name String
}

relationship OneToMany {
	Factory{productionLineGroup} to ProductionLineGroup
    ProductionLineGroup{productionLine} to ProductionLine
    Factory{businessUnit} to BusinessUnit
    BusinessUnit{users} to CompanyUser
    Metric{metrics} to MetricData
    ProductionLine{things} to Things
    ProductionLine{states} to State
    ProductionPlan{productData} to ProductData
}

relationship OneToOne {
	ProductionLine{locationData} to LocationData
    MetricData{status} to Status   
    CompanyUser{userProfile} to UserProfile
}
// Set pagination options

// Use Data Transfer Objects (DTO)
dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
